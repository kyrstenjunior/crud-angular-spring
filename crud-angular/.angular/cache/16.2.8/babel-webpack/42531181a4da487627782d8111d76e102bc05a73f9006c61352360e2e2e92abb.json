{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CategoryPipe {\n  transform(value) {\n    switch (value) {\n      case 'front-end':\n        return 'code';\n      case 'back-end':\n        return 'computer';\n    }\n    return 'code';\n  }\n  static #_ = this.ɵfac = function CategoryPipe_Factory(t) {\n    return new (t || CategoryPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"category\",\n    type: CategoryPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["CategoryPipe","transform","value","_","_2","pure"],"sources":["D:\\TI\\Projetos\\crud-angular-spring\\crud-angular\\src\\app\\shared\\pipes\\category.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'category'\r\n})\r\nexport class CategoryPipe implements PipeTransform {\r\n\r\n  transform(value: string): string {\r\n    switch(value){\r\n      case 'front-end': return 'code';\r\n      case 'back-end': return 'computer';\r\n    }\r\n    return 'code';\r\n  }\r\n\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,SAASA,CAACC,KAAa;IACrB,QAAOA,KAAK;MACV,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,UAAU;QAAE,OAAO,UAAU;;IAEpC,OAAO,MAAM;EACf;EAAC,QAAAC,CAAA,G;qBARUH,YAAY;EAAA;EAAA,QAAAI,EAAA,G;;UAAZJ,YAAY;IAAAK,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}